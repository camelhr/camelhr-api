version: "3.8"

services:
  db:
    image: postgres:16.2-alpine
    restart: unless-stopped
    command: "postgres -c log_statement=all -c log_error_verbosity=verbose"
    ports:
      - "${PGPORT?}:${PGPORT?}"
    environment:
      POSTGRES_USER: ${PGUSER?}
      POSTGRES_PASSWORD: ${PGPASSWORD?}
      POSTGRES_DB: ${PGDATABASE?}
      TZ: 'UTC'
    volumes:
      - camelhr-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${PGDATABASE?} -U ${PGUSER?}"]
      timeout: 10s
      interval: 5s
      retries: 10

  dbmigrator:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_CONN: "user=${PGUSER?} password=${PGPASSWORD?} dbname=${PGDATABASE?} host=${PGHOST} port=${PGPORT?} sslmode=${PGSSLMODE}"
    command: /app/dbmigrator up
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure:5
    network_mode: host

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_CONN: "user=${PGUSER?} password=${PGPASSWORD?} dbname=${PGDATABASE?} host=db port=${PGPORT?} sslmode=${PGSSLMODE}"
      LOG_LEVEL: DEBUG
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8080:8080"

volumes:
  camelhr-db-data:
